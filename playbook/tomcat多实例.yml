---
- hosts: tomcat
  vars:
    port_8080: 8080
    port_18080: 18080
    port_28080: 28080
  tasks:
   - name: Set authorized key took from file
     authorized_key:
      user: root
      state: present
      key: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
   - name:
     get_url:
      url: http://xxxx:18080/support_bin/chiq_webservice.war
      dest: "/opt/tomcat-webserices-{{ item }}/webapps/"
      force: yes
      backup: yes
     with_items:
       - "{{ port_8080 }}"
       - "{{ port_18080 }}"
       - "{{ port_28080 }}"
     notify:
       - stop tomcat
       - check tomcat
       - start tomcat
   - name: get tomcat_port {{port_8080}} pid
     shell: >
       ps -ef|grep -w "{{port_8080}}"|grep -v grep|awk '{print $2}'
     register: pid_8080
     failed_when: pid_8080 is undefined

   - name: get tomcat_port {{port_18080}}  pid
     shell: >
       ps -ef|grep -w "{{port_18080}}"|grep -v grep|awk '{print $2}'
     register: pid_18080
     failed_when: pid_18080 is undefined

   - name: get tomcat_port {{port_28080}} pid
     shell: >
       ps -ef|grep -w "{{port_28080}}"|grep -v grep|awk '{print $2}'
     register: pid_28080
     failed_when: pid_28080 is undefined

  handlers:
   - name: stop tomcat
     shell: |
       kill -15 "{{ item }}"
     with_items:
       - "{{ pid_28080.stdout }}"
       - "{{ pid_18080.stdout }}"
       - "{{ pid_8080.stdout }}"
   - name: check tomcat
     wait_for:
       host: localhost
       path: "/proc/{{item}}/status"
       state: absent
       timeout: 30
     with_items:
       - "{{ pid_28080.stdout }}"
       - "{{ pid_18080.stdout }}"
       - "{{ pid_8080.stdout }}"
   - name: start tomcat
     shell: >
       /opt/tomcat-webserices-"{{item}}"/bin/startup.sh
     with_items:
       - "{{ port_8080 }}"
       - "{{ port_18080 }}"
       - "{{ port_28080 }}"
